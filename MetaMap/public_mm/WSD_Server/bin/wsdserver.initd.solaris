#!/sbin/sh
#
# WSD Server System V init file
# by Willie Rogers
# based on start_server.sh and stop_server.sh by Halil Kilicoglu.
#
# $Id$
#
WSD=/usr/local/wsd/Disambiguator
export WSD
WSDSERVER=$WSD/WSD_Server
WSDLIB=$WSD/WSD_Server/lib
JAVA_HOME=/usr/j2sdk1.4.2_06
JAVA=${JAVA_HOME}/bin/java
export JAVA_HOME
JVMOPTIONS="-Xmx512m -Dserver.config.file=$WSD/WSD_Server/config/disambServer.cfg"
LD_LIBRARY_PATH=$WSDLIB:/usr/local/BerkeleyDB.4.1/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH
JAR_FILE=$WSDLIB/wsd.jar:$WSDLIB/kss-api.jar:$WSDLIB/thirdparty.jar:$WSDLIB/db.jar:$WSDLIB/log4j-1.2.8.jar

if [ ! -d ${WSD} ]; then
	exit 0
fi

PID_FILE=$WSD/WSD_Server/pid

case "$1" in
start)
	/bin/rm -f ${PIDFILE}
	cmdtext="starting"
	echo "wsd server $cmdtext."
	$JAVA $JVMOPTIONS -classpath $JAR_FILE wsd.server.DisambiguatorServer &
	echo $! > $PID_FILE
	;;
restart)
	cmdtext="restarting"
	echo "wsd server $cmdtext."
	if [ -r $PID_FILE ] 
	then
		PID=`cat "$PID_FILE"` 
		echo Stopping WSD Server process..
		kill -9 $PID
		echo Process $PID stopped 
	fi
	$JAVA $JVMOPTIONS -classpath $JAR_FILE wsd.server.DisambiguatorServer &
	echo $! > $PID_FILE
	;;
stop)
	cmdtext="stopping"
	echo "wsd server $cmdtext."
	if [ -r $PID_FILE ] 
	then
		PID=`cat "$PID_FILE"` 
		echo Stopping WSD Server process..
		kill -9 $PID
		echo Process $PID stopped 
	else
		echo Server not running
		exit 1
	fi
	;;
*)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
	;;
esac

if [ $? != 0 ]; then
	echo "$status"
	exit 1
fi
exit 0
